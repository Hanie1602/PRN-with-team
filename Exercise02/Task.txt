Programming Exercise: Simple Chat Application (Client-Server) in C#
Objective:
Create a simple chat application using sockets in C#. It allows multiple clients to connect to a server and exchange messages in real-time.
Requirements:
1.	Server:
o	Use TcpListener to listen on a fixed port (e.g., 12345).
o	Accept multiple client connections.
o	Broadcast received messages to all connected clients.
2.	Client:
o	Use TcpClient to connect to the server.
o	Send messages to the server.
o	Receive and display messages from the server (including messages from other clients).
Technical Details:
•	Use the TCP protocol.
•	Console-based interface.
•	Use threads for handling multiple clients on the server and separate send/receive operations on the client.
Structure:
1.	Server:
o	Maintain a list of connected clients.
o	Use a separate thread to handle communication with each client.
o	Relay messages to all clients (broadcast).
2.	Client:
o	Connect to the server and allow user input for messages.
o	Use threads to handle message sending and receiving simultaneously.
